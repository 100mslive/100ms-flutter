
update_fastlane

# ENV["FIREBASE_TOKEN"] = "1//0g3a4KhTy3aRQCgYIARAAGBASNwF-L9Ir1HiwwxhpeRAMjV6oZjk8niOYLV-Ytmbwnx0GCvJEbgPoV9RPXaLDEr2Tse8S1tM-Zzo"

default_platform(:ios)

platform :ios do

  desc "Distributes the Runner iOS app on Firebase & TestFlight."
  lane :distribute_app do

    bump_version
    
    compile_app

    # upload_symbols
    
    distribute_on_firebase

    distribute_on_testflight

    post_message_on_slack
    
  end 


  lane :bump_version do

    increment_build_number_in_plist(
      target: 'Runner'
    )

    increment_version_number_in_plist(
      bump_type: 'patch',
      target: 'Runner'
    )

  end


  private_lane :compile_app do
    gym(
      scheme: "Runner",
      workspace: "./Runner.xcworkspace",
      include_symbols: true,
      export_method: "ad-hoc",
      export_options: {
        provisioningProfiles: { 
          "live.100ms.flutter" => "FlutterAdHocDistribution",
          "live.100ms.flutter.FlutterBroadcastUploadExtension" => "FlutterAdhocBroadcastUploadExtension"
        }
      }
    )
  end


  # private_lane :upload_symbols do
    
  #   dsym_zip(
  #     archive_path: lane_context[SharedValues::XCODEBUILD_ARCHIVE],
  #     all: false
  #   )  

  #   upload_symbols_to_crashlytics(
  #     dsym_paths: [lane_context[SharedValues::DSYM_OUTPUT_PATH], lane_context[SharedValues::DSYM_ZIP_PATH]],
  #     gsp_path: "./Runner/GoogleService-Info.plist",
  #   )
  # end


  private_lane :distribute_on_firebase do
    firebase_app_distribution(
      app: "1:19544678223:ios:a7bb21cc95bb495ab32f3a",
      groups: "internal, External",
      service_credentials_file: "flutter-hms-4aea6d38fd2a.json",
      ipa_path: "./Runner.ipa",
      release_notes_file: "../ExampleAppChangelog.txt"
    )
  end


  lane :distribute_on_testflight do
    gym(
      scheme: "Runner",
      workspace: "./Runner.xcworkspace",
      include_symbols: true,
      export_method: "app-store",
      export_options: {
        provisioningProfiles: { 
          "live.100ms.flutter" => "FlutterAppStore",
          "live.100ms.flutter.FlutterBroadcastUploadExtension" => "FlutterAppStoreBroadcastUploadExtension"
        }
      }
    )

    api_key = app_store_connect_api_key(
      key_id: "BY94A5BH9T",
      issuer_id: "7b598151-7443-44b8-a7e8-d5d48cb40412",
      key_filepath: "./AuthKey_BY94A5BH9T.p8",
      duration: 1200, 
      in_house: false
    ) 

    pilot(
      api_key: api_key,
      app_identifier: "live.100ms.flutter",
      notify_external_testers: true,
      demo_account_required: false,
      changelog: File.read("../../ExampleAppChangelog.txt"),
      distribute_external: true,
      notify_external_testers: true,
      groups: 'External',
      reject_build_waiting_for_review: true
    )
  end

  lane :post_message_on_slack do
    
    build_number = get_info_plist_value(path: "./Runner/Info.plist", key: "CFBundleVersion")
    version = get_version_number_from_plist(
      target: 'Runner'
    )
    
    slack(
      message: ":flutter: 🎉 Flutter iOS App released! 🎊 :flutter:",
      slack_url: "test",
      payload: {
        "📲 Download from Firebase 🔥" => "https://appdistribution.firebase.dev/i/051800400061502d", 
        "📲 Download from TestFlight 🍎" => "https://testflight.apple.com/join/Uhzebmut",
        "📝 Changelog" => File.read("../../ExampleAppChangelog.txt") 
      },
      default_payloads: ["git_branch"], 
      attachment_properties: {      
        fields: [{
          title: "📱🎊 App Version",
          value: version + " (" + build_number + ")",
          short: false 
        }]
      }
    )
  end

end
